<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">  
 <!-- Activates annotation-based bean configuration--> 
  <context:annotation-config />
  <context:component-scan base-package="com.qc*"/> 
  
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <property name="ignoreResourceNotFound" value="true" />
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
      <list>
        <value>classpath:/jdbc.properties
        </value>
      </list>
    </property>
  </bean>

  

<!-- 数据库映射 
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
    <property name="driverClass" value="${jdbc.driverClassName}"></property>
    <property name="jdbcUrl" value="${jdbc.url}"></property>
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>-->
  
  <!-- 数据库映射 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
    <property name="driverClass" value="${jdbc.driverClassName}"></property>
    <property name="jdbcUrl" value="${jdbc.url}"></property>
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>


  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" autowire="byName">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan">
      <list>
        <!-- 可以加多个包 -->
        <value>com.qc.model</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.autoReconnect">true</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.connection.autocommit">true</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
        <!-- <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> -->
        <!-- 需要再次配置数据源,c3p0才起作用 
        <prop key="hibernate.connection.provider_class">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</prop>
        <prop key="hibernate.connection.driver_class">${jdbc.driverClassName}</prop>
        <prop key="hibernate.connection.url">${jdbc.url}</prop>
        <prop key="hibernate.connection.username">${jdbc.username}</prop>
        <prop key="hibernate.connection.password">${jdbc.password}</prop>
        -->
        <!-- c3p0 
        <prop key="hibernate.c3p0.min_size">3</prop>
        <prop key="hibernate.c3p0.max_size">56</prop>
        <prop key="hibernate.c3p0.timeout">321</prop>
        <prop key="c3p0.max_statements">255</prop>
        <prop key="hibernate.c3p0.idle_test_period">300</prop>
        <prop key="hibernate.c3p0.acquire_increment">2</prop>
        <prop key="hibernate.c3p0.validate">true</prop>
        -->
      </props>
    </property>
  </bean>
  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate" autowire="byName">
    <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>

  <!-- 配置Hibernate事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- 配置事务异常封装 -->
  <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
      <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" />
      <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException" />
      <tx:method name="find*" propagation="SUPPORTS" />
      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="select*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="pointCutConfig" expression="execution(public * com.qc.service.*.*(..))" />
    <aop:advisor pointcut-ref="pointCutConfig" advice-ref="txAdvice" />
  </aop:config>

  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


  
</beans>